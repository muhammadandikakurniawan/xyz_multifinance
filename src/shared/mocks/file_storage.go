// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"

	filestorage "github.com/muhammadandikakurniawan/xyz_multifinance/src/module/consumer/infrastructure/filestorage"
	mock "github.com/stretchr/testify/mock"
)

// FileStorage is an autogenerated mock type for the FileStorage type
type FileStorage struct {
	mock.Mock
}

// UploadBase64 provides a mock function with given fields: ctx, opt
func (_m *FileStorage) UploadBase64(ctx context.Context, opt filestorage.UploadFileOpt) (filestorage.UploadResultOpt, error) {
	ret := _m.Called(ctx, opt)

	var r0 filestorage.UploadResultOpt
	if rf, ok := ret.Get(0).(func(context.Context, filestorage.UploadFileOpt) filestorage.UploadResultOpt); ok {
		r0 = rf(ctx, opt)
	} else {
		r0 = ret.Get(0).(filestorage.UploadResultOpt)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, filestorage.UploadFileOpt) error); ok {
		r1 = rf(ctx, opt)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewFileStorage interface {
	mock.TestingT
	Cleanup(func())
}

// NewFileStorage creates a new instance of FileStorage. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFileStorage(t mockConstructorTestingTNewFileStorage) *FileStorage {
	mock := &FileStorage{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
